{"ast":null,"code":"var _jsxFileName = \"/home/gmr/guiminr/ecommerce/src/componets/CheckoutForm/PaymentForm.jsx\";\nimport React from 'react';\nimport { Typography, Button, Divider } from '@material-ui/core';\nimport { Elements, CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport Review from './Review';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\nconst PaymentForm = ({\n  checkoutToken,\n  shippingData,\n  backStep,\n  onCaptureCheckout,\n  nextStep,\n  timeout\n}) => {\n  const handleSubmit = async (event, elements, stripe) => {\n    event.preventDefault();\n    if (!stripe || !elements) return;\n    const cardElement = elements.getElement(CardElement);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n\n    if (error) {\n      console.log(error);\n    } else {\n      const orderData = {\n        line_items: checkoutToken.live.line_items,\n        customer: {\n          firstname: shippingData.firstname,\n          lastname: shippingData.lastname,\n          email: shippingData.email\n        },\n        shipping: {\n          name: 'Primary',\n          street: shippingData.address1,\n          town_city: shippingData.city,\n          county_state: shippingData.shippingSubdivision,\n          postal_zip_code: shippingData.zip,\n          country: shippingData.shippingCountry\n        },\n        fulfillment: {\n          shipping_method: shippingData.shippingOption\n        },\n        payment: {\n          gateway: 'stripe',\n          stripe: {\n            payment_method_id: paymentMethod.id\n          }\n        }\n      };\n      onCaptureCheckout(checkoutToken.id, orderData);\n      timeout();\n      nextStep();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Review, {\n      checkoutToken: checkoutToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      style: {\n        margin: '20px 0'\n      },\n      children: \"Payment method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Elements, {\n      stripe: stripePromise,\n      children: /*#__PURE__*/_jsxDEV(ElementsConsumer, {\n        children: ({\n          elements,\n          stripe\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleSubmit(e, elements, stripe),\n          children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: backStep,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              disable: !stripe,\n              color: \"primary\",\n              children: [\"Pay \", checkoutToken.live.subtotal.formatted_with_symbol]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n};\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/home/gmr/guiminr/ecommerce/src/componets/CheckoutForm/PaymentForm.jsx"],"names":["React","Typography","Button","Divider","Elements","CardElement","ElementsConsumer","loadStripe","Review","stripePromise","process","env","REACT_APP_STRIPE_PUBLIC_KEY","PaymentForm","checkoutToken","shippingData","backStep","onCaptureCheckout","nextStep","timeout","handleSubmit","event","elements","stripe","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log","orderData","line_items","live","customer","firstname","lastname","email","shipping","name","street","address1","town_city","city","county_state","shippingSubdivision","postal_zip_code","zip","country","shippingCountry","fulfillment","shipping_method","shippingOption","payment","gateway","payment_method_id","id","margin","e","display","justifyContent","subtotal","formatted_with_symbol"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,MAApB,EAA4BC,OAA5B,QAA2C,mBAA3C;AACA,SAAQC,QAAR,EAAkBC,WAAlB,EAA+BC,gBAA/B,QAAuD,yBAAvD;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,aAAa,GAAGF,UAAU,CAACG,OAAO,CAACC,GAAR,CAAYC,2BAAb,CAAhC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,YAAhB;AAA8BC,EAAAA,QAA9B;AAAwCC,EAAAA,iBAAxC;AAA2DC,EAAAA,QAA3D;AAAqEC,EAAAA;AAArE,CAAD,KAAmF;AACnG,QAAMC,YAAY,GAAG,OAAOC,KAAP,EAAcC,QAAd,EAAwBC,MAAxB,KAAmC;AACpDF,IAAAA,KAAK,CAACG,cAAN;AAEA,QAAI,CAACD,MAAD,IAAW,CAACD,QAAhB,EAA0B;AAE1B,UAAMG,WAAW,GAAGH,QAAQ,CAACI,UAAT,CAAoBrB,WAApB,CAApB;AACA,UAAM;AAACsB,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAyB,MAAML,MAAM,CAACM,mBAAP,CAA2B;AAACC,MAAAA,IAAI,EAAE,MAAP;AAAeC,MAAAA,IAAI,EAAEN;AAArB,KAA3B,CAArC;;AACA,QAAIE,KAAJ,EAAW;AACPK,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH,KAFD,MAEO;AACH,YAAMO,SAAS,GAAG;AACdC,QAAAA,UAAU,EAAErB,aAAa,CAACsB,IAAd,CAAmBD,UADjB;AAEdE,QAAAA,QAAQ,EAAE;AAACC,UAAAA,SAAS,EAAEvB,YAAY,CAACuB,SAAzB;AAAoCC,UAAAA,QAAQ,EAAExB,YAAY,CAACwB,QAA3D;AAAqEC,UAAAA,KAAK,EAAEzB,YAAY,CAACyB;AAAzF,SAFI;AAGdC,QAAAA,QAAQ,EAAE;AACNC,UAAAA,IAAI,EAAE,SADA;AAENC,UAAAA,MAAM,EAAE5B,YAAY,CAAC6B,QAFf;AAGNC,UAAAA,SAAS,EAAE9B,YAAY,CAAC+B,IAHlB;AAINC,UAAAA,YAAY,EAAEhC,YAAY,CAACiC,mBAJrB;AAKNC,UAAAA,eAAe,EAAElC,YAAY,CAACmC,GALxB;AAMNC,UAAAA,OAAO,EAAEpC,YAAY,CAACqC;AANhB,SAHI;AAWdC,QAAAA,WAAW,EAAE;AAAEC,UAAAA,eAAe,EAAEvC,YAAY,CAACwC;AAAhC,SAXC;AAYdC,QAAAA,OAAO,EAAE;AACLC,UAAAA,OAAO,EAAE,QADJ;AAELlC,UAAAA,MAAM,EAAE;AACJmC,YAAAA,iBAAiB,EAAE9B,aAAa,CAAC+B;AAD7B;AAFH;AAZK,OAAlB;AAoBA1C,MAAAA,iBAAiB,CAACH,aAAa,CAAC6C,EAAf,EAAmBzB,SAAnB,CAAjB;AACAf,MAAAA,OAAO;AACPD,MAAAA,QAAQ;AACX;AACJ,GAlCD;;AAoCA,sBACI;AAAA,4BACG,QAAC,MAAD;AAAQ,MAAA,aAAa,EAAEJ;AAAvB;AAAA;AAAA;AAAA;AAAA,YADH,eAEG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFH,eAGG,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAsC,MAAA,KAAK,EAAE;AAAE8C,QAAAA,MAAM,EAAE;AAAV,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHH,eAIG,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEnD,aAAlB;AAAA,6BACE,QAAC,gBAAD;AAAA,kBACK,CAAC;AAACa,UAAAA,QAAD;AAAWC,UAAAA;AAAX,SAAD,kBACE;AAAM,UAAA,QAAQ,EAAGsC,CAAD,IAAOzC,YAAY,CAACyC,CAAD,EAAIvC,QAAJ,EAAcC,MAAd,CAAnC;AAAA,kCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAES;AAAA;AAAA;AAAA;AAAA,kBAFT,eAGI;AAAK,YAAA,KAAK,EAAE;AAAEuC,cAAAA,OAAO,EAAE,MAAX;AAAmBC,cAAAA,cAAc,EAAE;AAAnC,aAAZ;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,UAAhB;AAA2B,cAAA,OAAO,EAAE/C,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAC,WAA9B;AAA0C,cAAA,OAAO,EAAE,CAACO,MAApD;AAA4D,cAAA,KAAK,EAAC,SAAlE;AAAA,iCACST,aAAa,CAACsB,IAAd,CAAmB4B,QAAnB,CAA4BC,qBADrC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJH;AAAA,kBADJ;AAuBH,CA5DD;;KAAMpD,W;AA8DN,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport {Typography, Button, Divider } from '@material-ui/core';\nimport {Elements, CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport Review from './Review';\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\nconst PaymentForm = ({checkoutToken, shippingData, backStep, onCaptureCheckout, nextStep, timeout}) => {\n    const handleSubmit = async (event, elements, stripe) => {\n        event.preventDefault();\n\n        if (!stripe || !elements) return;\n\n        const cardElement = elements.getElement(CardElement);\n        const {error, paymentMethod} = await stripe.createPaymentMethod({type: 'card', card: cardElement});\n        if (error) {\n            console.log(error);\n        } else {\n            const orderData = {\n                line_items: checkoutToken.live.line_items,\n                customer: {firstname: shippingData.firstname, lastname: shippingData.lastname, email: shippingData.email },\n                shipping: {\n                    name: 'Primary', \n                    street: shippingData.address1, \n                    town_city: shippingData.city,\n                    county_state: shippingData.shippingSubdivision,\n                    postal_zip_code: shippingData.zip,\n                    country: shippingData.shippingCountry,\n                },\n                fulfillment: { shipping_method: shippingData.shippingOption},\n                payment: {\n                    gateway: 'stripe',\n                    stripe: {\n                        payment_method_id: paymentMethod.id\n                    }\n                }\n            }\n\n            onCaptureCheckout(checkoutToken.id, orderData);\n            timeout();\n            nextStep();\n        }\n    }\n\n    return (\n        <>\n           <Review checkoutToken={checkoutToken} />\n           <Divider />\n           <Typography variant=\"h6\" gutterBottom style={{ margin: '20px 0'}}>Payment method</Typography>\n           <Elements stripe={stripePromise}>\n             <ElementsConsumer>\n                 {({elements, stripe}) => (\n                    <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\n                        <CardElement />\n                        <br/><br/>\n                        <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n                            <Button variant=\"outlined\" onClick={backStep}>Back</Button>\n                            <Button type=\"submit\" variant=\"contained\" disable={!stripe} color=\"primary\">\n                                Pay {checkoutToken.live.subtotal.formatted_with_symbol }\n                            </Button>\n                        </div>\n                    </form>\n                 )}\n             </ElementsConsumer>\n           </Elements>\n        </>\n    )\n}\n\nexport default PaymentForm\n"]},"metadata":{},"sourceType":"module"}