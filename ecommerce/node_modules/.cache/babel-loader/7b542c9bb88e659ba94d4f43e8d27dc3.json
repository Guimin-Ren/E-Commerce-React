{"ast":null,"code":"var _jsxFileName = \"/home/gmr/guiminr/ecommerce/src/componets/CheckoutForm/AddressForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './CustomTextField';\nimport { commerce } from '../../lib/commerce';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddressForm = ({\n  checkoutToken,\n  next\n}) => {\n  _s();\n\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\n    id: code,\n    label: name\n  }));\n  const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({\n    id: code,\n    label: name\n  }));\n  const options = shippingOptions.map(sO => ({\n    id: sO.id,\n    label: `${sO.description} - (${sO.price.formatted_with_symbol}`\n  }));\n\n  const fetchShippingCountries = async checkoutTokenId => {\n    const {\n      countries\n    } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async countryCode => {\n    const {\n      subdivisions\n    } = await commerce.services.localeListSubdivisions(countryCode);\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, {\n      country,\n      region\n    });\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n  useEffect(() => {\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n  }, [shippingSubdivision]);\n  const methods = useForm();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \" Shipping Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: methods.handleSubmit(data => next({ ...data\n        })),\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstName\",\n            label: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"lastName\",\n            label: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"address1\",\n            label: \"address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"email\",\n            label: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"City\",\n            label: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"ZIP\",\n            label: \"ZIP / Postal code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingCountry,\n              fullWidth: true,\n              onChange: e => setShippingCountry(e.target.value),\n              children: countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: country.id,\n                children: country.label\n              }, country.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Subdivision\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingSubdivision,\n              fullWidth: true,\n              onChange: e => setShippingSubdivision(e.target.value),\n              children: subdivisions.map(subdivision => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: subdivision.id,\n                children: subdivision.label\n              }, subdivision.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingOption,\n              fullWidth: true,\n              onChange: e => setShippingOption(e.target.value),\n              children: options.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: option.id,\n                children: option.label\n              }, option.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: \"/cart\",\n            variant: \"outlined\",\n            children: \"Back to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddressForm, \"N+On06eugSiochUaK18m5BPmo2Q=\", false, function () {\n  return [useForm];\n});\n\n_c = AddressForm;\nexport default AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["/home/gmr/guiminr/ecommerce/src/componets/CheckoutForm/AddressForm.jsx"],"names":["React","useState","useEffect","InputLabel","Select","MenuItem","Button","Grid","Typography","useForm","FormProvider","FormInput","commerce","Link","AddressForm","checkoutToken","next","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivisions","setShippingSubdivisions","shippingSubdivision","setShippingSubdivision","shippingOptions","setShippingOptions","shippingOption","setShippingOption","countries","Object","entries","map","code","name","id","label","subdivisions","options","sO","description","price","formatted_with_symbol","fetchShippingCountries","checkoutTokenId","services","localeListShippingCountries","keys","fetchSubdivisions","countryCode","localeListSubdivisions","fetchShippingOptions","country","region","checkout","getShippingOptions","methods","handleSubmit","data","e","target","value","subdivision","option","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core'\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './CustomTextField';\nimport { commerce } from '../../lib/commerce'\nimport { Link } from 'react-router-dom';\n\nconst AddressForm = ({checkoutToken, next}) => {\n    const [shippingCountries, setShippingCountries] = useState([]);\n    const [shippingCountry, setShippingCountry] = useState('');\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [shippingOption, setShippingOption] = useState('');\n\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({id: code, label: name}))\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({id: code, label: name}))\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol}`}))\n    \n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0]);\n    }\n\n    const fetchSubdivisions = async (countryCode) => {\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n        setShippingSubdivisions(subdivisions);\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\n    }\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region });\n        setShippingOptions(options);\n        setShippingOption(options[0].id);\n    }\n\n    useEffect(() => {\n        fetchShippingCountries(checkoutToken.id);\n    }, []);\n\n    useEffect(() => {\n        if (shippingCountry)\n            fetchSubdivisions(shippingCountry);\n    }, [shippingCountry]);\n\n    useEffect(() => {\n        if (shippingSubdivision)\n            fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n    }, [shippingSubdivision]);\n\n    const methods = useForm();\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom> Shipping Address</Typography>\n            <FormProvider {...methods}>\n                <form onSubmit={methods.handleSubmit((data) => next({...data}))}>\n                    <Grid container spacing={3}>\n                        <FormInput required name='firstName' label='First Name'/>\n                        <FormInput required name='lastName' label='Last Name'/>\n                        <FormInput required name='address1' label='address'/>\n                        <FormInput required name='email' label='Email'/>\n                        <FormInput required name='City' label='City'/>\n                        <FormInput required name='ZIP' label='ZIP / Postal code'/>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                                {countries.map((country) => (\n                                    <MenuItem key={country.id} value={country.id}>\n                                    {country.label}\n                                </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Subdivision</InputLabel>\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                                {subdivisions.map((subdivision) => (\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>\n                                    {subdivision.label}\n                                </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Options</InputLabel>\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                                {options.map((option) => (\n                                    <MenuItem key={option.id} value={option.id}>\n                                    {option.label}\n                                </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n                                <Button component={Link} to=\"/cart\" variant=\"outlined\">Back to Cart</Button>\n                                <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\n                    </div>\n                </form>\n            </FormProvider>\n        </>\n    )\n}\n\nexport default AddressForm\n"]},"metadata":{},"sourceType":"module"}