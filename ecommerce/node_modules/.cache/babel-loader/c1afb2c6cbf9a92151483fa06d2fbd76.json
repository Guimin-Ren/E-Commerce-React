{"ast":null,"code":"var _jsxFileName = \"/home/gmr/guiminr/ecommerce/src/componets/CheckoutForm/AddressForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './CustomTextField';\nimport { commerce } from '../../lib/commerce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddressForm = ({\n  checkoutToken\n}) => {\n  _s();\n\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n\n  const fetchShippingCountries = async checkoutTokenId => {\n    const {\n      countries\n    } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n  const methods = useForm();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \" Shipping Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: \"\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstName\",\n            label: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"lastName\",\n            label: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"address1\",\n            label: \"address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"email\",\n            label: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"City\",\n            label: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"ZIP\",\n            label: \"ZIP / Postal code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddressForm, \"d//nqxIW6o+Qjom0xc07eGI9IGU=\", false, function () {\n  return [useForm];\n});\n\n_c = AddressForm;\nexport default AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["/home/gmr/guiminr/ecommerce/src/componets/CheckoutForm/AddressForm.jsx"],"names":["React","useState","useEffect","InputLabel","Select","MenuItem","Button","Grid","Typography","useForm","FormProvider","FormInput","commerce","AddressForm","checkoutToken","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivisions","setShippingSubdivisions","shippingSubdivision","setShippingSubdivision","shippingOptions","setShippingOptions","shippingOption","setShippingOption","fetchShippingCountries","checkoutTokenId","countries","services","localeListShippingCountries","Object","keys","id","methods"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core'\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './CustomTextField';\nimport { commerce } from '../../lib/commerce'\n\nconst AddressForm = ({checkoutToken}) => {\n    const [shippingCountries, setShippingCountries] = useState([]);\n    const [shippingCountry, setShippingCountry] = useState('');\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [shippingOption, setShippingOption] = useState('');\n    \n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0]);\n    }\n\n    useEffect(() => {\n        fetchShippingCountries(checkoutToken.id);\n    }, []);\n    const methods = useForm();\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom> Shipping Address</Typography>\n            <FormProvider {...methods}>\n                <form onSubmit=''>\n                    <Grid container spacing={3}>\n                        <FormInput required name='firstName' label='First Name'/>\n                        <FormInput required name='lastName' label='Last Name'/>\n                        <FormInput required name='address1' label='address'/>\n                        <FormInput required name='email' label='Email'/>\n                        <FormInput required name='City' label='City'/>\n                        <FormInput required name='ZIP' label='ZIP / Postal code'/>\n                        {/* <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select value={} fullWidth onChange={}>\n                                <MenuItem key={} value={}>\n                                    Select Me\n                                </MenuItem>\n                            </Select>\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Subdivision</InputLabel>\n                            <Select value={} fullWidth onChange={}>\n                                <MenuItem key={} value={}>\n                                    Select Me\n                                </MenuItem>\n                            </Select>\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Options</InputLabel>\n                            <Select value={} fullWidth onChange={}>\n                                <MenuItem key={} value={}>\n                                    Select Me\n                                </MenuItem>\n                            </Select>\n                        </Grid> */}\n                    </Grid>\n                </form>\n            </FormProvider>\n        </>\n    )\n}\n\nexport default AddressForm\n"]},"metadata":{},"sourceType":"module"}